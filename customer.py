# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JGiJEt9t4YfcNwQflcDjDR91DyFKSSo_
"""

import csv


class Mcustomer:

    """ Clase customer"""
    def __init__(self, file_path):
        """ Inicializar clase cargar parh"""
        self.file_path = file_path

    def crear_customer(self, idc, nombre, correo, telefono):
        """ Metodo crear customer"""
        with open(self.file_path, 'a', newline='', encoding='utf-8') as file:
            writer = csv.writer(file)
            writer.writerow([idc, nombre, correo, telefono])

    def borrar_customer(self, idc):
        """ Metodo borrar customer"""
        with open(self.file_path, 'r', encoding='utf-8') as file:
            lines = file.readlines()
        with open(self.file_path, 'w', encoding='utf-8') as file:
            writer = csv.writer(file)
            encontrado = False
            for line in lines:
                if line.split(',')[0] != idc:
                    writer.writerow(line.strip().split(','))
                else:
                    encontrado = True
            if not encontrado:
                print("Customer no encontrado.")

    def actualizar_customer(self, idc, nuevo_correo, nuevo_telefono):
        """ Metodo actualizar customer"""
        c_encontrado = False
        with open(self.file_path, 'r', encoding='utf-8') as file:
            lines = file.readlines()
        with open(self.file_path, 'w', encoding='utf-8') as file:
            writer = csv.writer(file)
            for line in lines:
                print(line.split(',')[0])
                if line.split(',')[0] == idc:
                    writer.writerow(
                      [idc, line.split(',')[1],
                       nuevo_correo,
                       nuevo_telefono]
                       )
                    c_encontrado = True
                else:
                    writer.writerow(line.strip().split(','))
        if not c_encontrado:
            print("Customer no encontrado.")

    def consultar_customer(self):
        """ Metodo consultar customer"""
        with open(self.file_path, 'r', encoding='utf-8') as file:
            reader = csv.reader(file)
            custom = list(reader)
        return custom
